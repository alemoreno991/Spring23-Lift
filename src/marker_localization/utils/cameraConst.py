import math
import numpy as np 
from . import transformationTools as trnt
CAMERA_MODEL = 1
# 0 := INTEL REALSENSE CAMERA
# 1 := HWIL SIMULATED CAMERA

# INTEL REALSENSE
IRSCAM_FOV = 130 # DEGREES
IRSCAM_IMAGE_PHEIGHT = 1920 # PIXELS
IRSCAM_IMAGE_PWIDTH = 1920 # PIXELS

IRSCAM_ASPECT_RATIO = IRSCAM_IMAGE_PWIDTH/IRSCAM_IMAGE_PHEIGHT
IRSCAM_Z_C_SCALED = (IRSCAM_IMAGE_PHEIGHT/2)/math.tan( math.radians(IRSCAM_FOV) / 2 )

IRSCAM_POSX_B = 0. # FEET
IRSCAM_POSY_B = 0. # FEET
IRSCAM_POSZ_B = -1. # FEET

IRSCAM_RPY_R_CB = 0. # DEGREES 
IRSCAM_RPY_P_CB = 0. # DEGREES 
IRSCAM_RPY_Y_CB = 180. # DEGREES 

IRSCAM_POS_B  = np.array( [ [IRSCAM_POSX_B], [IRSCAM_POSY_B], [IRSCAM_POSZ_B] ] ) # FEET
IRSCAM_RCB = trnt.rpyDCM( math.radians(IRSCAM_RPY_R_CB) , math.radians(IRSCAM_RPY_P_CB) , math.radians(IRSCAM_RPY_Y_CB) )

# HWIL SIMULATED CAMERA (HSCAM)
HSCAM_FOV = 130 # DEGREES
HSCAM_IMAGE_PHEIGHT = 1920 # PIXELS
HSCAM_IMAGE_PWIDTH = 1920 # PIXELS

HSCAM_POSX_B = 0. # FEET
HSCAM_POSY_B = 0. # FEET
HSCAM_POSZ_B = -1. # FEET

HSCAM_RPY_R_CB = 0. # DEGREES 
HSCAM_RPY_P_CB = 0. # DEGREES 
HSCAM_RPY_Y_CB = 180. # DEGREES 

HSCAM_POS_B  = np.array( [ [HSCAM_POSX_B], [HSCAM_POSY_B], [HSCAM_POSZ_B] ] ) # FEET
HSCAM_RCB = trnt.rpyDCM( math.radians(HSCAM_RPY_R_CB) , math.radians(HSCAM_RPY_P_CB) , math.radians(HSCAM_RPY_Y_CB) )

HSCAM_ASPECT_RATIO = HSCAM_IMAGE_PWIDTH/HSCAM_IMAGE_PHEIGHT
HSCAM_Z_C_SCALED = (HSCAM_IMAGE_PHEIGHT/2)/math.tan( math.radians(HSCAM_FOV) / 2 )


